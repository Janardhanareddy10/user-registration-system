{"version":3,"sources":["userController.js"],"names":["User","require","createUser","req","res","body","name","age","dob","gender","about","status","json","message","user","save","error","getUsers","find","users","getUserById","findById","params","id","updateUser","findByIdAndUpdate","updatedUser","deleteUser","findByIdAndDelete","deletedUser","module","exports"],"mappings":"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","sourcesContent":["const User = require(\"../models/User\");\r\n\r\n\r\nconst createUser = async (req, res) => {\r\n  try {\r\n    const { name, age, dob, gender, about } = req.body;\r\n\r\n    if (!name || !age || !dob || !gender) {\r\n      return res.status(400).json({ message: \"All fields except 'about' are required\" });\r\n    }\r\n\r\n    const user = new User({ name, age, dob, gender, about });\r\n    await user.save();\r\n    res.status(201).json({ message: \"User registered successfully\", user });\r\n\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Server error\", error: error.message });\r\n  }\r\n};\r\n\r\n\r\nconst getUsers = async (req, res) => {\r\n  try {\r\n    const users = await User.find();\r\n    res.json(users);\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Server error\", error: error.message });\r\n  }\r\n};\r\n\r\n\r\nconst getUserById = async (req, res) => {\r\n  try {\r\n    const user = await User.findById(req.params.id);\r\n    if (!user) return res.status(404).json({ message: \"User not found\" });\r\n    res.json(user);\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Server error\", error: error.message });\r\n  }\r\n};\r\n\r\n\r\nconst updateUser = async (req, res) => {\r\n  try {\r\n    const updatedUser = await User.findByIdAndUpdate(req.params.id, req.body, { new: true });\r\n    if (!updatedUser) return res.status(404).json({ message: \"User not found\" });\r\n    res.json(updatedUser);\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Server error\", error: error.message });\r\n  }\r\n};\r\n\r\n\r\nconst deleteUser = async (req, res) => {\r\n  try {\r\n    const deletedUser = await User.findByIdAndDelete(req.params.id);\r\n    if (!deletedUser) return res.status(404).json({ message: \"User not found\" });\r\n    res.json({ message: \"User deleted successfully\" });\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Server error\", error: error.message });\r\n  }\r\n};\r\n\r\nmodule.exports = { createUser, getUsers, getUserById, updateUser, deleteUser };\r\n"],"file":"userController.dev.js"}