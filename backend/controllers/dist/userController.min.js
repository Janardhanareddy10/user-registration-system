"use strict";var User=require("../models/User"),createUser=function(r,s){var t,n,a,u,o,c,d;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(e.prev=0,t=r.body,n=t.name,a=t.age,u=t.dob,o=t.gender,c=t.about,n&&a&&u&&o){e.next=4;break}return e.abrupt("return",s.status(400).json({message:"All fields except 'about' are required"}));case 4:return d=new User({name:n,age:a,dob:u,gender:o,about:c}),e.next=7,regeneratorRuntime.awrap(d.save());case 7:s.status(201).json({message:"User registered successfully",user:d}),e.next=13;break;case 10:e.prev=10,e.t0=e.catch(0),s.status(500).json({message:"Server error",error:e.t0.message});case 13:case"end":return e.stop()}},null,null,[[0,10]])},getUsers=function(e,r){var s;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(User.find());case 3:s=e.sent,r.json(s),e.next=10;break;case 7:e.prev=7,e.t0=e.catch(0),r.status(500).json({message:"Server error",error:e.t0.message});case 10:case"end":return e.stop()}},null,null,[[0,7]])},getUserById=function(r,s){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(User.findById(r.params.id));case 3:if(t=e.sent){e.next=6;break}return e.abrupt("return",s.status(404).json({message:"User not found"}));case 6:s.json(t),e.next=12;break;case 9:e.prev=9,e.t0=e.catch(0),s.status(500).json({message:"Server error",error:e.t0.message});case 12:case"end":return e.stop()}},null,null,[[0,9]])},updateUser=function(r,s){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(User.findByIdAndUpdate(r.params.id,r.body,{new:!0}));case 3:if(t=e.sent){e.next=6;break}return e.abrupt("return",s.status(404).json({message:"User not found"}));case 6:s.json(t),e.next=12;break;case 9:e.prev=9,e.t0=e.catch(0),s.status(500).json({message:"Server error",error:e.t0.message});case 12:case"end":return e.stop()}},null,null,[[0,9]])},deleteUser=function(r,s){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(User.findByIdAndDelete(r.params.id));case 3:if(e.sent){e.next=6;break}return e.abrupt("return",s.status(404).json({message:"User not found"}));case 6:s.json({message:"User deleted successfully"}),e.next=12;break;case 9:e.prev=9,e.t0=e.catch(0),s.status(500).json({message:"Server error",error:e.t0.message});case 12:case"end":return e.stop()}},null,null,[[0,9]])};module.exports={createUser:createUser,getUsers:getUsers,getUserById:getUserById,updateUser:updateUser,deleteUser:deleteUser};
//# sourceMappingURL=userController.min.js.map
