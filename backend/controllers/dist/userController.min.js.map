{"version":3,"sources":["userController.js"],"names":["User","require","createUser","req","res","_req$body","name","age","dob","gender","about","user","regeneratorRuntime","async","_context","prev","next","body","abrupt","status","json","message","awrap","save","t0","error","stop","getUsers","users","_context2","find","sent","getUserById","_context3","findById","params","id","updateUser","updatedUser","_context4","findByIdAndUpdate","new","deleteUser","_context5","findByIdAndDelete","module","exports"],"mappings":"aAAA,IAAMA,KAAOC,QAAQ,kBAGfC,WAAa,SAAOC,EAAKC,GAAZ,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,GAAAF,EAAAC,KAAA,EAAAV,EAAAF,EAAAc,KAAAX,EAAAD,EAAAC,KAAAC,EAAAF,EAAAE,IAAAC,EAAAH,EAAAG,IAAAC,EAAAJ,EAAAI,OAAAC,EAAAL,EAAAK,MAAAJ,GAAAC,GAAAC,GAAAC,EAAA,CAAAK,EAAAE,KAAA,EAAA,MAAA,OAAAF,EAAAI,OAAA,SAAAd,EAAAe,OAAA,KAAAC,KAAA,CAAAC,QAAA,4CAAA,KAAA,EAAA,OAAAV,EAAA,IAAAX,KAAA,CAAAM,KAAAA,EAAAC,IAAAA,EAAAC,IAAAA,EAAAC,OAAAA,EAAAC,MAAAA,IAAAI,EAAAE,KAAA,EAAAJ,mBAAAU,MAAAX,EAAAY,QAAA,KAAA,EAUfnB,EAAIe,OAAO,KAAKC,KAAK,CAAEC,QAAS,+BAAgCV,KAAAA,IAVjDG,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,MAAA,GAAAV,EAAAe,OAAA,KAAAC,KAAA,CAAAC,QAAA,eAAAI,MAAAX,EAAAU,GAAAH,UAAA,KAAA,GAAA,IAAA,MAAA,OAAAP,EAAAY,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAKeC,SALf,SAAAxB,EAAAC,GAAA,IAAAwB,EAAA,OAAAhB,mBAAAC,MAAA,SAAAgB,GAAA,OAAA,OAAAA,EAAAd,KAAAc,EAAAb,MAAA,KAAA,EAAA,OAAAa,EAAAd,KAAA,EAAAc,EAAAb,KAAA,EAAAJ,mBAAAU,MAAAtB,KAAA8B,QAAA,KAAA,EAAAF,EAAAC,EAAAE,KAQTpB,EAAAA,KAAAA,GARSkB,EAAAb,KAAA,GAAA,MAAA,KAAA,EAAAa,EAAAd,KAAA,EAAAc,EAAAL,GAAAK,EAAA,MAAA,GAQetB,EAAAA,OAAG,KAAXa,KAAA,CAAAC,QAAA,eAAAI,MAAAI,EAAAL,GAAAH,UARP,KAAA,GAAA,IAAA,MAAA,OAAAQ,EAAAH,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAAAM,YAAA,SAAA7B,EAAAC,GAAA,IAAAO,EAAA,OAAAC,mBAAAC,MAAA,SAAAoB,GAAA,OAAA,OAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,KAAA,EAAA,OAAAiB,EAAAlB,KAAA,EAAAkB,EAAAjB,KAAA,EAAAJ,mBAAAU,MA8BItB,KAAKkC,SAAS/B,EAAIgC,OAAOC,KA9B7B,KAAA,EAAA,GA8BTzB,EA9BSsB,EAAAF,KAAA,CAAAE,EAAAjB,KAAA,EAAA,MAAA,OAAAiB,EAAAf,OAAA,SAAAd,EAAAe,OAAA,KAAAC,KAAA,CAAAC,QAAA,oBAAA,KAAA,EAUfjB,EAAAA,KAAGO,GAVYsB,EAAAjB,KAAA,GAAA,MAAA,KAAA,EAAAiB,EAAAlB,KAAA,EAAAkB,EAAAT,GAAAS,EAAA,MAAA,GAUiDtB,EAAAA,OAAAA,KAAAA,KAAAA,CAAAA,QAAAA,eAAAA,MAAAA,EAAAA,GAAAA,UAVjD,KAAA,GAAA,IAAA,MAAA,OAAAsB,EAAAP,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAAAW,WAAA,SAAAlC,EAAAC,GAAA,IAAAkC,EAAA,OAAA1B,mBAAAC,MAAA,SAAA0B,GAAA,OAAA,OAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,KAAA,EAAA,OAAAuB,EAAAxB,KAAA,EAAAwB,EAAAvB,KAAA,EAAAJ,mBAAAU,MAAAtB,KAAAwC,kBAAArC,EAAAgC,OAAAC,GAAAjC,EAAAc,KAAA,CAAAwB,KAAA,KAAA,KAAA,EAAA,GAAAH,EAAAC,EAAAR,KAAA,CAAAQ,EAAAvB,KAAA,EAAA,MAAA,OAAAuB,EAAArB,OAAA,SAaCE,EAAKD,OAAA,KAAAC,KAAA,CAAAC,QAAA,oBAbN,KAAA,EAaQA,EAAAA,KAAAA,GAbRkB,EAAAvB,KAAA,GAAA,MAAA,KAAA,EAAAuB,EAAAxB,KAAA,EAAAwB,EAAAf,GAAAe,EAAA,MAAA,GAaMnC,EAAAe,OAArB,KAAAC,KAAA,CAAAC,QAAA,eAAAI,MAAAc,EAAAf,GAAAH,UAbe,KAAA,GAAA,IAAA,MAAA,OAAAkB,EAAAb,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAAAgB,WAAA,SAAAvC,EAAAC,GAAA,OAAAQ,mBAAAC,MAAA,SAAA8B,GAAA,OAAA,OAAAA,EAAA5B,KAAA4B,EAAA3B,MAAA,KAAA,EAAA,OAAA2B,EAAA5B,KAAA,EAAA4B,EAAA3B,KAAA,EAAAJ,mBAAAU,MAAAtB,KAAA4C,kBAAAzC,EAAAgC,OAAAC,KAAA,KAAA,EAAA,GAAAO,EAAAZ,KAAA,CAAAY,EAAA3B,KAAA,EAAA,MAAA,OAAA2B,EAAAzB,OAAA,SAAnBd,EAAAe,OAAA,KAAAC,KAAA,CAAAC,QAAA,oBAAmB,KAAA,EAsDfjB,EAAIgB,KAAK,CAAEC,QAAS,8BAtDLsB,EAAA3B,KAAA,GAAA,MAAA,KAAA,EAAA2B,EAAA5B,KAAA,EAAA4B,EAAAnB,GAAAmB,EAAA,MAAA,GAkBFvC,EAAAe,OAAA,KAAAC,KAAA,CAAAC,QAAA,eAAAI,MAAAkB,EAAAnB,GAAAH,UAlBE,KAAA,GAAA,IAAA,MAAA,OAAAsB,EAAAjB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAkBFmB,OAAAC,QAAA,CAAA5C,WAAAA,WAAAyB,SAAAA,SAAAK,YAAAA,YAAAK,WAAAA,WAAAK,WAAAA","file":"userController.min.js","sourcesContent":["const User = require(\"../models/User\");\r\n\r\n\r\nconst createUser = async (req, res) => {\r\n  try {\r\n    const { name, age, dob, gender, about } = req.body;\r\n\r\n    if (!name || !age || !dob || !gender) {\r\n      return res.status(400).json({ message: \"All fields except 'about' are required\" });\r\n    }\r\n\r\n    const user = new User({ name, age, dob, gender, about });\r\n    await user.save();\r\n    res.status(201).json({ message: \"User registered successfully\", user });\r\n\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Server error\", error: error.message });\r\n  }\r\n};\r\n\r\n\r\nconst getUsers = async (req, res) => {\r\n  try {\r\n    const users = await User.find();\r\n    res.json(users);\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Server error\", error: error.message });\r\n  }\r\n};\r\n\r\n\r\nconst getUserById = async (req, res) => {\r\n  try {\r\n    const user = await User.findById(req.params.id);\r\n    if (!user) return res.status(404).json({ message: \"User not found\" });\r\n    res.json(user);\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Server error\", error: error.message });\r\n  }\r\n};\r\n\r\n\r\nconst updateUser = async (req, res) => {\r\n  try {\r\n    const updatedUser = await User.findByIdAndUpdate(req.params.id, req.body, { new: true });\r\n    if (!updatedUser) return res.status(404).json({ message: \"User not found\" });\r\n    res.json(updatedUser);\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Server error\", error: error.message });\r\n  }\r\n};\r\n\r\n\r\nconst deleteUser = async (req, res) => {\r\n  try {\r\n    const deletedUser = await User.findByIdAndDelete(req.params.id);\r\n    if (!deletedUser) return res.status(404).json({ message: \"User not found\" });\r\n    res.json({ message: \"User deleted successfully\" });\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Server error\", error: error.message });\r\n  }\r\n};\r\n\r\nmodule.exports = { createUser, getUsers, getUserById, updateUser, deleteUser };\r\n"]}