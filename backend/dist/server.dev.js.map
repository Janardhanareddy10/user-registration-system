{"version":3,"sources":["server.js"],"names":["express","require","mongoose","cors","dotenv","userRoutes","config","app","use","origin","json","connectDB","connect","process","env","MONGO_URI","console","log","error","message","exit","PORT","listen"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMG,MAAM,GAAGH,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMI,UAAU,GAAGJ,OAAO,CAAC,qBAAD,CAA1B;;AAEAG,MAAM,CAACE,MAAP;AACA,IAAMC,GAAG,GAAGP,OAAO,EAAnB,C,CAEA;;AACAO,GAAG,CAACC,GAAJ,CAAQL,IAAI,CAAC;AAAEM,EAAAA,MAAM,EAAE;AAAV,CAAD,CAAZ,E,CAAgC;;AAChCF,GAAG,CAACC,GAAJ,CAAQR,OAAO,CAACU,IAAR,EAAR,E,CAEA;;AACAH,GAAG,CAACC,GAAJ,CAAQ,YAAR,EAAsBH,UAAtB,E,CAEA;;AACA,IAAMM,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAERT,QAAQ,CAACU,OAAT,CAAiBC,OAAO,CAACC,GAAR,CAAYC,SAA7B,CAFQ;;AAAA;AAGdC,UAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AAHc;AAAA;;AAAA;AAAA;AAAA;AAKdD,UAAAA,OAAO,CAACE,KAAR,CAAc,6BAAd,EAA6C,YAAMC,OAAnD;AACAN,UAAAA,OAAO,CAACO,IAAR,CAAa,CAAb,EANc,CAMG;;AANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB,C,CAUA;;;AACA,IAAMC,IAAI,GAAGR,OAAO,CAACC,GAAR,CAAYO,IAAZ,IAAoB,IAAjC;AACAd,GAAG,CAACe,MAAJ,CAAWD,IAAX,EAAkB,SAAlB,EAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CACpBV,SAAS,EADW;;AAAA;AACP;AACnBK,UAAAA,OAAO,CAACC,GAAR,+CAAyCI,IAAzC;;AAF0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B","sourcesContent":["// const express = require(\"express\");\r\n// const mongoose = require(\"mongoose\");\r\n// const cors = require(\"cors\");\r\n// const dotenv = require(\"dotenv\");\r\n// const userRoutes = require(\"./routes/userRoutes\");\r\n\r\n// dotenv.config();\r\n// const app = express();\r\n\r\n// app.use(cors());\r\n// app.use(express.json()); // Middleware to parse JSON\r\n// app.use(\"/api/users\", userRoutes); // User routes\r\n\r\n// // Connect to MongoDB\r\n// mongoose\r\n//   .connect(process.env.MONGO_URI, { useNewUrlParser: true, useUnifiedTopology: true })\r\n//   .then(() => console.log(\"MongoDB connected\"))\r\n//   .catch((err) => console.log(err));\r\n\r\n// const PORT = process.env.PORT || 5000;\r\n// app.listen(PORT, () => console.log(`Server running on port ${PORT}`));\r\nconst express = require(\"express\");\r\nconst mongoose = require(\"mongoose\");\r\nconst cors = require(\"cors\");\r\nconst dotenv = require(\"dotenv\");\r\nconst userRoutes = require(\"./routes/userRoutes\");\r\n\r\ndotenv.config();\r\nconst app = express();\r\n\r\n// Middleware\r\napp.use(cors({ origin: \"*\" })); // Allow all origins\r\napp.use(express.json());\r\n\r\n// Routes\r\napp.use(\"/api/users\", userRoutes);\r\n\r\n// Connect to MongoDB\r\nconst connectDB = async () => {\r\n  try {\r\n    await mongoose.connect(process.env.MONGO_URI);\r\n    console.log(\"✅ MongoDB connected\");\r\n  } catch (error) {\r\n    console.error(\"❌ MongoDB connection error:\", error.message);\r\n    process.exit(1); // Stop server if DB fails\r\n  }\r\n};\r\n\r\n// Start Server\r\nconst PORT = process.env.PORT || 5000;\r\napp.listen(PORT,  \"0.0.0.0\",async () => {\r\n  await connectDB(); // Ensure DB connects before running server\r\n  console.log(`🚀 Server running on port ${PORT}`);\r\n});\r\n"],"file":"server.dev.js"}