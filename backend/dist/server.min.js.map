{"version":3,"sources":["server.js"],"names":["mongoose","require","cors","dotenv","userRoutes","app","express","use","origin","json","regeneratorRuntime","async","_context","prev","next","awrap","connectDB","connect","env","MONGO_URI","console","log","t0","error","message","process","exit","stop","PORT","_context2","concat"],"mappings":"aAsBA,IAAMA,QAAWC,QAAQ,WAAnBD,SAAWC,QAAQ,YACnBC,KAAOD,QAAQ,QACfE,OAASF,QAAQ,UAAjBE,WAASF,QAAQ,uBACvBE,OAAMC,SAGN,IAAMC,IAAMC,UAGZD,IAAIE,IAAIL,KAAK,CAAEM,OAAQ,OAAvBH,IAAIE,IAAIL,QAAKO,QAIbJ,IAAIE,IAAI,aAAcH,YAAtBC,IAAIE,UAAI,WAAA,OAAAG,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAK,MAGFC,SAAYC,QAAZD,QAAYE,IAAAC,YAHV,KAAA,EAGUC,QAAAC,IAAA,uBAHVT,EAAAE,KAAA,GAAA,MAAA,KAAA,EAAAF,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,MAAA,GAGUQ,QAAAG,MAAA,8BAAAX,EAAAU,GAAAE,SAAAC,QAAAC,KAAA,GAHV,KAAA,GAAA,IAAA,MAAA,OAAAd,EAAAe,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAGUC,KAAAH,QAAAP,IAAAU,MAAA,IAGdR,IAAAA,OAAAA,KAAQC,UAAI,WAAA,OAAAX,mBAAAC,MAAA,SAAAkB,GAAA,OAAA,OAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,KAAA,EAAA,OAAAe,EAAAf,KAAA,EAAAJ,mBAAAK,MAHEC,aAGF,KAAA,EAHEI,QAAAC,IAAA,6BAAAS,OAAAF,OAGF,KAAA,EAAA,IAAA,MAAA,OAAAC,EAAAF","file":"server.min.js","sourcesContent":["// const express = require(\"express\");\r\n// const mongoose = require(\"mongoose\");\r\n// const cors = require(\"cors\");\r\n// const dotenv = require(\"dotenv\");\r\n// const userRoutes = require(\"./routes/userRoutes\");\r\n\r\n// dotenv.config();\r\n// const app = express();\r\n\r\n// app.use(cors());\r\n// app.use(express.json()); // Middleware to parse JSON\r\n// app.use(\"/api/users\", userRoutes); // User routes\r\n\r\n// // Connect to MongoDB\r\n// mongoose\r\n//   .connect(process.env.MONGO_URI, { useNewUrlParser: true, useUnifiedTopology: true })\r\n//   .then(() => console.log(\"MongoDB connected\"))\r\n//   .catch((err) => console.log(err));\r\n\r\n// const PORT = process.env.PORT || 5000;\r\n// app.listen(PORT, () => console.log(`Server running on port ${PORT}`));\r\nconst express = require(\"express\");\r\nconst mongoose = require(\"mongoose\");\r\nconst cors = require(\"cors\");\r\nconst dotenv = require(\"dotenv\");\r\nconst userRoutes = require(\"./routes/userRoutes\");\r\n\r\ndotenv.config();\r\nconst app = express();\r\n\r\n// Middleware\r\napp.use(cors({ origin: \"*\" })); // Allow all origins\r\napp.use(express.json());\r\n\r\n// Routes\r\napp.use(\"/api/users\", userRoutes);\r\n\r\n// Connect to MongoDB\r\nconst connectDB = async () => {\r\n  try {\r\n    await mongoose.connect(process.env.MONGO_URI);\r\n    console.log(\"✅ MongoDB connected\");\r\n  } catch (error) {\r\n    console.error(\"❌ MongoDB connection error:\", error.message);\r\n    process.exit(1); // Stop server if DB fails\r\n  }\r\n};\r\n\r\n// Start Server\r\nconst PORT = process.env.PORT || 5000;\r\napp.listen(PORT,  \"0.0.0.0\",async () => {\r\n  await connectDB(); // Ensure DB connects before running server\r\n  console.log(`🚀 Server running on port ${PORT}`);\r\n});\r\n"]}